version: '3.8'

# Grafana + Prometheus monitoring stack for SecurNote
# Usage: docker-compose -f docker-compose.monitoring.yml up

services:
  # SecurNote application with metrics
  securnote:
    build: .
    ports:
      - "8000:8000"  # Admin API
      - "9090:9090"  # Prometheus metrics
    volumes:
      - ./data:/app/data
      - ./prometheus:/app/prometheus
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - METRICS_PORT=9090
    command: >
      sh -c "python scripts/start_metrics.py &
             python scripts/run_web.py"
    networks:
      - monitoring
    restart: unless-stopped

  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    restart: unless-stopped

  # Grafana - Visualization and dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=securnote123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: